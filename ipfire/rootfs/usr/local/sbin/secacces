#!/bin/bash
while getopts ":vh:" option
do
 case $option in
  h)
   echo ""
   echo "Usage  : $0 [-vh]"
   echo ""
   echo "option :"   
   echo "          -v  verbose"
   echo "          -h  help"
   echo ""
   exit -1
   ;;
  v)
   v=1
   ;;
 esac
done
if [ -f /etc/default/ssl ];
then
	. /etc/default/ssl
else
	echo "File $FILE does not exist."
	echo "error exit 1"
	return 1
fi
CONFIG=ipsec.cnf

echo "Nom du client:"
read CLIENT
sed -i -e 's/^commonName_default.*$/commonName_default                = '${CLIENT}.${CN}'/g'  ${PATH_SSL}/${CONFIG}
sed -i -e 's/^organizationalUnitName_default.*$/organizationalUnitName_default    = Certificat Acces IPSec/g'  ${PATH_SSL}/${CONFIG}
echo
if [[ "$v" == "1" ]]; then
	echo "Génération de la clé privé crypté..."
	echo "openssl genrsa  -out ${PATH_SSL}/ipsec/private/${CLIENT}.key 4096 -config ${PATH_SSL}/${CONFIG}"

fi
openssl genrsa  -out ${PATH_SSL}/ipsec/private/${CLIENT}.key 4096 -config ${PATH_SSL}/${CONFIG}
if [[ "$v" == "1" ]]; then
	echo "Création de la clé publique..."
	echo "openssl req -key ${PATH_SSL}/ipsec/private/${CLIENT}.key -sha256 -out ${PATH_SSL}/ipsec/${CLIENT}.req -new -nodes -config ${PATH_SSL}/${CONFIG}"

fi
openssl req -key ${PATH_SSL}/ipsec/private/${CLIENT}.key -sha256 -out ${PATH_SSL}/ipsec/${CLIENT}.req -new -nodes -config ${PATH_SSL}/${CONFIG}
if [[ "$v" == "1" ]]; then
	echo "Signature du certificat [ACCESS] par l'autorité [IPSEC]." 
	echo "openssl ca -name IPSEC -extensions ACCES -in ${PATH_SSL}/ipsec/${CLIENT}.req -out ${PATH_SSL}/ipsec/certs/${CLIENT}.pem -config ${PATH_SSL}/${CONFIG}"

fi
openssl ca -name IPSEC -extensions ACCES -in ${PATH_SSL}/ipsec/${CLIENT}.req -out ${PATH_SSL}/ipsec/certs/${CLIENT}.pem -config ${PATH_SSL}/${CONFIG}
if [[ "$v" == "1" ]]; then
	echo "Portage du jeu de certificat vers un format p12."
	echo "openssl pkcs12 -export -inkey ${PATH_SSL}/ipsec/private/${CLIENT}.key -in ${PATH_SSL}/ipsec/certs/${CLIENT}.pem -name "${CLIENT}.${CN}" -certfile ${PATH_SSL}/ipsec/certs/ca.pem -caname "${CN}" -out ${PATH_SSL}/ipsec/${CLIENT}.p12" 

fi
openssl pkcs12 -export -inkey ${PATH_SSL}/ipsec/private/${CLIENT}.key -in ${PATH_SSL}/ipsec/certs/${CLIENT}.pem -name "${CLIENT}.${CN}" -certfile ${PATH_SSL}/ipsec/certs/ca.pem -caname "${CN}" -out ${PATH_SSL}/ipsec/${CLIENT}.p12 
chmod 400 ${PATH_SSL}/ipsec/private/${CLIENT}.key
chmod 444 ${PATH_SSL}/ipsec/certs/${CLIENT}.pem

