#!/bin/sh
########################################################################
# Name Script : vhost
#
#
#
#
# Description : script use to create a virtual host
#
########################################################################
# cat /etc/vhost/XXX.vhost
# INDEX=1
# RAM=
# DISK=/home/qemu/example.img
# BRIDGE=orange
# MAC_TAP="72:A3:C3:F7:6F:01"
# MAC_NET="72:A3:C3:F7:6F:03"
# ISO=/home/qemu/example.iso
# BOOT=d to force iso start at boot

# cat /etc/default/vhost
# SIZE=8G
# KEYBOARD=fr
# BOOT=c
# RAM=512M

. /etc/sysconfig/rc
. ${rc_functions}

stop_host(){
	. ${1}
	HOST=${1##*/}
	PID_FILE=/var/run/${HOST}.pid
	FILE_MONITOR=/var/run/${HOST}

	if [ -S ${FILE_MONITOR} ]; then		
		boot_mesg "Send shutdown to virtual host ${HOST}..."
		/usr/local/sbin/shutdown.pm ${HOST}
		evaluate_retval
		sleep 15
	fi

	boot_mesg "Removing tap${INDEX} from ${BRIDGE} bridge..." 

	ip link set tap${INDEX} down 

	brctl delif ${BRIDGE} tap${INDEX}
	evaluate_retval

	boot_mesg "Destroying tap${INDEX} ..." 
	COUNTER=10
	tunctl -d tap${INDEX}
	while [[ $? != 0   &&  ${COUNTER} > 0 ]];
	do
		sleep 5
		COUNTER=$((${COUNTER}-1))
		tunctl -d tap${INDEX}
	done

	rm ${PID_FILE}
	rm ${FILE_MONITOR}

	evaluate_retval
	
}
start_host(){
	. /etc/default/vhost
	. ${1}
	HOST=${1##*/}
	PID_FILE=/var/run/${HOST}.pid
	FILE_MONITOR=/var/run/${HOST}
	GREEN=`ifconfig green0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
	_KEYBOARD="-k ${KEYBOARD}"
	_RAM="-m ${RAM}"

	# VNC access, usable with TightVNC
	_VNC="-vnc ${GREEN}:${INDEX}"

		_NET="-netdev type=tap,id=net0,ifname=tap${INDEX},script=no,downscript=no,vhost=on -device virtio-net,netdev=net0,mac=${MAC_NET}"
	
	if test "${ISO}" == ""; then
		_DISK="-drive file=${DISK},if=virtio"
	else
		_DISK="-drive file=${DISK},if=virtio -cdrom ${ISO}"
	fi

	if ! test -f ${DISK}; then
		qemu-img create -f qcow2 ${DISK} ${SIZE}
		_BOOT="-boot d"
	else
		if ! test "${BOOT}" == ""; then
			_BOOT="-boot ${BOOT}"
		else
			_BOOT="-boot c"
		fi
	fi

	boot_mesg "Creating tap${INDEX} for virtual host ${HOST}..."
	ip tuntap add mode tap dev tap${INDEX}
	
	# assign MAC address to tapX
	ip link set tap${INDEX} address ${MAC_TAP}
	
	# Change settings on tapX to improve performance for virtio
	ethtool --offload tap${INDEX} gso off tso off
	evaluate_retval 
	
	sleep 1
	boot_mesg "Adding tap${INDEX} to ${BRIDGE} bridge..."

	# Add real green nic
	brctl addif ${BRIDGE} tap${INDEX}

	# Bring nic's up
	ip link set tap${INDEX} up
	evaluate_retval 

	boot_mesg "Starting virtual host ${HOST}..." 
	qemu-system-x86_64 -enable-kvm -daemonize -cpu host \
		${_KEYBOARD} \
		${_BOOT} \
		${_DISK} \
		${_VNC} \
		${_RAM} \
		${_NET} \
		-monitor unix:${FILE_MONITOR},server,nowait,nodelay \
		-pidfile ${PID_FILE}
		evaluate_retval
}
stop(){
	for f in $(find /etc/vhost/ -iname "*.vhost"); do
		stop_host $f
	done
}
start(){
	for f in $(find /etc/vhost/ -iname "*.vhost"); do
		start_host $f
	done
}
status(){
	C_RED='\033[0;31m'
	C_GREEN='\033[0;32m'
	NC='\033[0m' # No Color
	for f in $(find /etc/vhost/ -iname "${1}*.vhost"); do
		a_File=$(readlink -f $f)
		HOST=${a_File##*/}
		PID_FILE=/var/run/${HOST}.pid
		if [ -f ${PID_FILE} ]; then
			echo  -e "${NC}${HOST}${C_GREEN}\t" `cat ${PID_FILE}` "${NC}"
		else
			echo -e "${NC}${HOST}${C_RED}\t not start${NC}"
		fi	
	done
}
case "${1}" in
	start)
		if ! test "${2}" == "" ; then
			if test -f "/etc/vhost/${2}.vhost" ; then
				start_host /etc/vhost/${2}.vhost
			fi
		else
			start
		fi
		
	;;
	stop)
		if ! test "${2}" == "" ; then
			if test -f "/etc/vhost/${2}.vhost" ; then
				stop_host /etc/vhost/${2}.vhost
			fi
		else
			stop
		fi
	;;
	status)
		status
	;;
	*)
		echo "Usage: ${0} {start|stop|status}"
		exit 1
	;;
esac
